{"version":3,"sources":["actions/types.js","actions/index.js","components/DataTable/scrollbarWidth.js","components/DataTable/GlobalFilter.js","components/DataTable/ReactTable.js","components/DataTable/RowSelector.js","components/DataTable/index.js","components/DataTable/formatData.js","components/Alerts.js","components/AppErrorBoundary.js","data/columns.js","App.js","reportWebVitals.js","reducers/index.js","middleware/api.js","actions/api.js","store/index.js","index.js"],"names":["FETCH_PRODUCT_LIST_REQUEST","FETCH_PRODUCT_LIST_SUCCESS","FETCH_PRODUCT_LIST_FAILURE","API","API_START","API_END","setProductListData","data","type","payload","setProductListError","scrollbarWidth","scrollDiv","document","createElement","setAttribute","body","appendChild","offsetWidth","clientWidth","removeChild","GlobalFilter","preGlobalFilteredRows","globalFilter","setGlobalFilter","count","length","React","useState","value","setValue","onChange","useAsyncDebounce","undefined","e","target","placeholder","style","fontSize","border","Table","columns","defaultColumnWidth","onSelectionChange","onRowClick","globalSearch","defaultColumn","useMemo","width","scrollBarSize","useTable","useGlobalFilter","useSortBy","useRowSelect","useBlockLayout","getTableProps","getTableBodyProps","headerGroups","rows","totalColumnsWidth","prepareRow","state","selectedRowIds","useEffect","selectedIds","Object","keys","selected","console","log","RenderRow","useCallback","index","row","getRowProps","onClick","values","className","cells","map","cell","getCellProps","column","render","marginRight","height","justifyContent","headerGroup","getHeaderGroupProps","headers","sortable","getHeaderProps","getSortByToggleProps","isSorted","isSortedDesc","itemCount","itemSize","RowSelector","forwardRef","ref","indeterminate","rest","defaultRef","useRef","resolvedRef","current","Styles","styled","div","DataTable","columnData","id","Header","getToggleAllRowsSelectedProps","Cell","getToggleRowSelectedProps","filter","item","isHidden","label","numeric","isImage","src","alt","isLink","href","rel","accessor","rowData","formatData","Alerts","selectedRows","lastRowClickedData","lastRowClickedIndex","clasName","JSON","stringify","AppErrorBoundary","props","hasError","error","errorInfo","this","setState","children","color","Component","AppContent","isLoadingData","message","App","rowIndex","bind","fetchProductList","connect","productList","url","method","accessToken","onSuccess","onFailure","headersOverride","apiAction","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","action","apiMiddleware","dispatch","next","dataOrParams","includes","axios","defaults","baseURL","process","REACT_APP_BASE_URL","common","apiStart","request","catch","apiError","response","status","accessDenied","window","location","pathname","finally","apiEnd","middlewareState","applyMiddleware","thunk","logger","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","combineReducers","rootReducer","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b270e97e.chunk.js","sourcesContent":["export const FETCH_PRODUCT_LIST_REQUEST = 'FETCH_PRODUCT_LIST_REQUEST';\nexport const FETCH_PRODUCT_LIST_SUCCESS = 'FETCH_PRODUCT_LIST_SUCCESS';\nexport const FETCH_PRODUCT_LIST_FAILURE = 'FETCH_PRODUCT_LIST_FAILURE';\n\nexport const API = 'API';\nexport const API_START = 'API_START';\nexport const API_END = 'API_END';\nexport const ACCESS_DENIED = 'ACCESS_DENIED';\nexport const API_ERROR = 'API_ERROR';\n","import {\n  FETCH_PRODUCT_LIST_REQUEST,\n  FETCH_PRODUCT_LIST_SUCCESS,\n  FETCH_PRODUCT_LIST_FAILURE,\n  API,\n} from '../actions/types';\n\nexport function fetchProductList() {\n  return apiAction({\n    url: 'https://jsonplaceholder.typicode.com/photos', //REST API Endpoint to consume data\n    onSuccess: setProductListData,\n    onFailure: setProductListError,\n    label: FETCH_PRODUCT_LIST_REQUEST,\n  });\n}\n\nfunction setProductListData(data) {\n  return {\n    type: FETCH_PRODUCT_LIST_SUCCESS,\n    payload: data,\n  };\n}\n\nfunction setProductListError(data) {\n  return {\n    type: FETCH_PRODUCT_LIST_FAILURE,\n    payload: data,\n  };\n}\n\nfunction apiAction({\n  url = '',\n  method = 'GET',\n  data = null,\n  accessToken = null,\n  onSuccess = () => { },\n  onFailure = () => { },\n  label = '',\n  headersOverride = null,\n}) {\n  return {\n    type: API,\n    payload: {\n      url,\n      method,\n      data,\n      accessToken,\n      onSuccess,\n      onFailure,\n      label,\n      headersOverride,\n    },\n  };\n}\n","const scrollbarWidth = () => {\n  const scrollDiv = document.createElement('div');\n  scrollDiv.setAttribute(\n    'style',\n    'width: 100px; height: 100px; overflow: scroll; position:absolute; top:-9999px;',\n  );\n  document.body.appendChild(scrollDiv);\n  const scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n  document.body.removeChild(scrollDiv);\n  return scrollbarWidth;\n};\n\nexport default scrollbarWidth;\n","import React from 'react';\nimport { useAsyncDebounce } from 'react-table';\n\n// component to search within table data globally\nexport default function GlobalFilter({ preGlobalFilteredRows, globalFilter, setGlobalFilter }) {\n    const count = preGlobalFilteredRows.length;\n    const [value, setValue] = React.useState(globalFilter);\n    const onChange = useAsyncDebounce((value) => {\n        setGlobalFilter(value || undefined);\n    }, 200);\n\n    return (\n        <span>\n            Search:{' '}\n            <input\n                value={value || ''}\n                onChange={(e) => {\n                    setValue(e.target.value);\n                    onChange(e.target.value);\n                }}\n                placeholder={`${count} records...`}\n                style={{\n                    fontSize: '1.1rem',\n                    border: '0',\n                }}\n            />\n        </span>\n    );\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    useTable,\n    useRowSelect,\n    useBlockLayout,\n    useSortBy,\n    useGlobalFilter,\n} from 'react-table';\nimport { FixedSizeList } from 'react-window';\nimport scrollbarWidth from './scrollbarWidth';\nimport GlobalFilter from './GlobalFilter';\n\n// width of column if not specified in data\nconst colWidth = 150;\n\nTable.propTypes = {\n    columns: PropTypes.array,\n    data: PropTypes.array,\n    defaultColumnWidth: PropTypes.number,\n    onSelectionChange: PropTypes.func,\n    onRowClick: PropTypes.func,\n    globalSearch: PropTypes.bool,\n}\n\n// Main table component to be rendered\nexport default function Table({\n    columns,\n    data,\n    defaultColumnWidth,\n    onSelectionChange = () => { },\n    onRowClick = () => { },\n    globalSearch,\n}) {\n\n    // Use the state and functions returned from useTable to build UI\n    const defaultColumn = React.useMemo(\n        () => ({\n            width: defaultColumnWidth || colWidth, // Set width of column\n        }),\n        [defaultColumnWidth],\n    );\n\n    //If table overflows, get scrollbarsize to set height and width of table and rows\n    const scrollBarSize = React.useMemo(() => scrollbarWidth(), []);\n\n    //root hook for React Table\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        totalColumnsWidth,\n        prepareRow,\n        state: { selectedRowIds, globalFilter },\n        preGlobalFilteredRows,\n        setGlobalFilter,\n    } = useTable({\n        columns,\n        data,\n        defaultColumn,\n    },\n        useGlobalFilter, // hook that implements global row filtering\n        useSortBy, // hook that implements row sorting\n        useRowSelect, // hook that implements basic row selection\n        useBlockLayout // plugin hook that adds support for headers and cells to be rendered as inline-block \n    );\n\n    // Effect hook to trigger onSelectionChange when selectedRowIds change in state\n    React.useEffect(() => {\n        const selectedIds = Object.keys(selectedRowIds);\n        const selected = selectedIds.length === data.length ? 'All' : selectedIds;\n        console.log(\"onSelectionChange\", onSelectionChange)\n        onSelectionChange(selected);\n    }, [onSelectionChange, selectedRowIds])\n\n\n    // hook to render a row\n    const RenderRow = React.useCallback(\n        ({ index, style }) => {\n            const row = rows[index];\n            prepareRow(row);\n            return (\n                <div\n                    {...row.getRowProps({\n                        style,\n                    })}\n                    onClick={() => {\n                        // trigger row click callback function\n                        onRowClick(row.values, index);\n                    }}\n                    className={`${index % 2 === 0 ? 'tr tr-striped' : 'tr'}`}\n                >\n                    {row.cells.map((cell) => {\n                        return (\n                            <div\n                                {...cell.getCellProps()}\n                                style={{\n                                    ...cell.getCellProps().style,\n                                    width: (cell && cell.column && cell.column.width) || colWidth,\n                                }}\n                                className=\"td\"\n                            >\n                                {cell.render('Cell')}\n                            </div>\n                        );\n                    })}\n                </div>\n            );\n        },\n        [prepareRow, rows, selectedRowIds, onRowClick]\n    );\n\n    // Render the UI for your table\n    // Use divs instead of table tags for better performance in rendering on DOM\n    return (\n        <div {...getTableProps()} className=\"table table-striped\">\n            <div className=\"thead\">\n                {/* Render global search only when globalSearch={true} in the API.\n                First row in table */}\n                {globalSearch && (\n                    <div style={{ marginRight: scrollBarSize }} className=\"tr\">\n                        <div className=\"th\" style={{ height: '50px', justifyContent: 'flex-end' }}>\n                            <GlobalFilter\n                                preGlobalFilteredRows={preGlobalFilteredRows}\n                                globalFilter={globalFilter}\n                                setGlobalFilter={setGlobalFilter}\n                            />\n                        </div>\n                    </div>\n                )}\n                {/* Render column header for the table. */}\n                {headerGroups.map((headerGroup) => (\n                    <div\n                        {...headerGroup.getHeaderGroupProps()}\n                        style={{ ...headerGroup.getHeaderGroupProps().style, marginRight: scrollBarSize }}\n                        className=\"tr\"\n                    >\n                        {/* Add sort functionality to columns where sortable={true} */}\n                        {headerGroup.headers.map((column) =>\n                            column.sortable ? (\n                                <div\n                                    {...column.getHeaderProps(column.getSortByToggleProps())}\n                                    style={{ ...column.getHeaderProps.style, width: column.width }}\n                                    className=\"th\"\n                                >\n                                    {column.render('Header')}\n                                    <span className=\"action-icon\">\n                                        {column.isSorted ? (column.isSortedDesc ? '▼' : '▲') : '⇅'}\n                                    </span>\n                                </div>\n                            ) : (\n                                    <div\n                                        {...column.getHeaderProps()}\n                                        style={{ ...column.getHeaderProps.style, width: column.width }}\n                                        className=\"th\"\n                                    >\n                                        {column.render('Header')}\n                                    </div>\n                                ),\n                        )}\n                    </div>\n                ))}\n            </div>\n\n            {/* FixedSizeList from react-window to render rows only within viewable scroll area.\n            This helps in handling large data and enhances performance*/}\n            <div {...getTableBodyProps()} className=\"tbody\">\n                <FixedSizeList\n                    height={350}\n                    itemCount={rows.length}\n                    itemSize={35}\n                    width={totalColumnsWidth + scrollBarSize}\n                >\n                    {RenderRow}\n                </FixedSizeList>\n            </div>\n        </div>\n    );\n}\n","import React from 'react';\n\n// Component to render row selection checkboxes\nconst RowSelector = React.forwardRef(({ indeterminate, ...rest }, ref) => {\n    const defaultRef = React.useRef();\n    const resolvedRef = ref || defaultRef;\n    React.useEffect(() => {\n        resolvedRef.current.indeterminate = indeterminate;\n    }, [resolvedRef, indeterminate]);\n\n    return (\n        <>\n            <input className=\"mr-t-10\" type=\"checkbox\" ref={resolvedRef} {...rest} />\n        </>\n    );\n});\n\nexport default RowSelector;","import React from 'react';\nimport styled from 'styled-components';\nimport Table from './ReactTable';\nimport formatData from './formatData';\nimport RowSelector from './RowSelector'\n\nconst Styles = styled.div`\n  padding: 1rem;\n\n  .table-striped {\n    .tbody .tr-striped {\n      background-color: rgba(0, 0, 0, 0.03);\n    }\n  }\n\n  .table {\n    display: inline-block;\n    border-spacing: 0;\n    border: 1px solid #ddd;\n    word-break: break-word;\n    width: 100%;\n\n    .tr {\n      :last-child {\n        .td {\n          border-bottom: 0;\n        }\n      }\n    }\n\n    .th {\n      display: flex;\n      box-sizing: border-box;\n      font-weight: bold;\n      justify-content: center;\n      align-items: center;\n\n      .action-icon{\n        color: rgb(34, 167, 208);\n        cursor: pointer;\n      }\n    }\n\n    .td {\n      .cell-rt-align {\n        padding: 5px;\n        text-align: right;\n      }\n      .mr-t-10 {\n        margin-top: 10px;\n      }\n    }\n\n    .th,\n    .td {\n      margin: 0;\n      border-bottom: 1px solid #ddd;\n      border-right: 1px solid #ddd;\n\n      .cell-padding {\n        padding: 5px;\n      }\n\n      :last-child {\n        border-right: 1px solid #ddd;\n      }\n    }\n  }\n`;\n\n\nfunction DataTable({\n  columns,\n  rows,\n  defaultColumnWidth,\n  onSelectionChange,\n  onRowClick,\n  globalSearch,\n}) {\n\n  // use memoized hook to create columns data for react-table component to avoid memory leaks\n  const columnData = React.useMemo(\n    () =>\n      columns && columns.length > 0\n        ? [{// Column for enabling user to select rows using checkboxes\n          id: 'selection',\n          Header: ({ getToggleAllRowsSelectedProps }) => (\n            <div>\n              <RowSelector\n                {...getToggleAllRowsSelectedProps()}\n              />\n            </div>\n          ),\n          width: 100,\n          Cell: ({ row }) => (\n            <div>\n              <RowSelector\n                {...row.getToggleRowSelectedProps()}\n              />\n            </div>\n          ),\n        },\n        ...columns.filter((item) => !item.isHidden)\n          .map((item) => {\n            return {\n              ...item,\n              Header: () => {\n                return <div className=\"cell-padding\">{item.label}</div>;\n              },\n              Cell: ({ value }) => {\n                // cell wrappers for numeric, isImagem isLink type fields\n                return item.numeric ? (\n                  <div className=\"cell-rt-align\">{value}</div>\n                ) :\n                  (\n                    <div className=\"cell-padding\">\n                      {item.isImage && typeof value === 'string' ? (\n                        <img width={25} src={value} alt=\"thumbnail\" />\n                      ) : item.isLink && typeof value === 'string' ? (\n                        <a href={`${value}`} target=\"_blank\" rel=\"noreferrer\">\n                          Open Link &#xbb;\n                        </a>\n                      ) : (\n                            value\n                          )}\n                    </div>\n                  );\n              },\n              width: item.width || defaultColumnWidth,\n              accessor: item.id,\n            };\n          })\n        ]\n        : [],\n    [columns, defaultColumnWidth],\n  );\n\n  // use memoized hook to create rows data for react-table component to avoid memory leaks\n  const rowData = React.useMemo(() => formatData(rows), [rows]);\n  return (\n    <Styles>\n      <Table\n        columns={columnData}\n        data={rowData}\n        defaultColumnWidth={defaultColumnWidth}\n        onSelectionChange={onSelectionChange}\n        onRowClick={onRowClick}\n        globalSearch={globalSearch}\n      />\n    </Styles>\n  );\n}\n\nexport default DataTable;\n","// format data in rows if required\nexport default function formatData(rows) {\n  return rows && rows.length > 0\n    ? rows.map((item) => {\n      return item;\n    })\n    : [];\n}\n","import React from 'react';\n\n// Display alert box when action is triggered from table\nexport default function Alerts({ selectedRows, lastRowClickedData, lastRowClickedIndex }) {\n  return (\n    <div className=\"alerts\">\n      {selectedRows && selectedRows.length > 0 && (\n        <div clasName=\"alert alert-info\">\n          <h5 className=\"alert-title\">\n            Selected Rows: <span className=\"alert-title-data\">{JSON.stringify(selectedRows)}</span>\n          </h5>\n        </div>\n      )}\n      {lastRowClickedData && (\n        <div clasName=\"alert alert-info\">\n          <h5 className=\"alert-title\">\n            Last clicked Row: <span className=\"alert-title-data\">{lastRowClickedIndex} </span>\n          </h5>\n          <p className=\"alert-note\">\n            <i>NOTE: Indexing of rows starts from 0</i>\n          </p>\n          <pre className=\"clickedObject\">\n            <code>{JSON.stringify(lastRowClickedData, null, 2)}</code>\n          </pre>\n        </div>\n      )}\n    </div>\n  );\n}\n","import React from 'react';\n\nexport default class AppErrorBoundary extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { hasError: false, error: null, errorInfo: null };\n    }\n\n    static getDerivedStateFromError() {\n        // Update state so the next render will show the fallback UI.\n        return { hasError: true };\n    }\n\n    componentDidCatch(errorInfo) {\n        this.setState({ hasError: true, errorInfo: errorInfo })\n    }\n\n    render() {\n        const { hasError, errorInfo } = this.state\n        const { children } = this.props\n        if (hasError) {\n            // You can render any custom fallback UI\n            return <div>\n                <h5 style={{ color: \"tomato\" }}>Failed to render data table. Please try again later.</h5>\n                {errorInfo && <p>{JSON.stringify(errorInfo)}</p>}\n            </div>;\n        }\n\n        return children;\n    }\n}\n","const columns = [\n  {\n    id: 'id',\n    label: 'ID',\n    numeric: true,\n    width: '100px',\n    sortable: true, // sort action on column\n  },\n  {\n    id: 'thumbnailUrl',\n    label: 'Thumbnail',\n    isImage: true, // Indicates if a column is of type image\n  },\n  {\n    id: 'title',\n    label: 'Title',\n    numeric: false,\n    width: '100%',\n    sortable: true,\n  },\n  {\n    id: 'albumId', //Unique Id\n    label: 'Album ID', //Use in Header\n    numeric: true, //Right Align if true\n    width: '100px', // Column width,\n    isHidden: true, // Column visibility\n  },\n  {\n    id: 'url',\n    label: 'URL',\n    numeric: false,\n    width: '25%',\n    isLink: true, // Indicates if a column is of type link\n  },\n];\n\nexport default columns;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchProductList } from './actions';\nimport DataTable from './components/DataTable';\nimport Alerts from './components/Alerts';\nimport AppErrorBoundary from './components/AppErrorBoundary'\nimport columns from './data/columns';\nimport './App.css';\n\nfunction AppContent({ isLoadingData, error, data, onSelectionChange, onRowClick }) {\n  if (isLoadingData) {\n    return <div>Loading . . .</div>\n  } else if (error && error.message) {\n    return <div>Failed {error && error.message}</div>\n  } else if (data && data.length > 0) {\n    return <DataTable\n      columns={columns} // column headers for table\n      rows={data} // data rows for table\n      defaultColumnWidth={300} // set default column width if width not specified\n      onSelectionChange={onSelectionChange} // trigger when row selection changed using left chckboxes\n      onRowClick={onRowClick} // trigger when a row is clicked, return row data and index\n      globalSearch={true} // enable search on the entire data\n    />\n  } else {\n    return <div />\n  }\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedRows: [],\n      lastRowClickedData: null,\n      lastRowClickedIndex: null,\n    };\n    this.onSelectionChange = this.onSelectionChange.bind(this);\n    this.onRowClick = this.onRowClick.bind(this);\n  }\n\n  componentDidMount() {\n    // On component mount call fetch request to load data\n    const { fetchProductList } = this.props;\n    fetchProductList();\n  }\n\n  onSelectionChange = (selectedRows = []) => {\n    console.log('selectedRows', selectedRows);\n    this.setState({ selectedRows: selectedRows });\n  };\n\n  onRowClick = (rowData = null, rowIndex = null) => {\n    console.log('onRowClick', rowData);\n    this.setState({ lastRowClickedData: rowData, lastRowClickedIndex: rowIndex });\n  };\n\n  render() {\n    const { selectedRows, lastRowClickedData, lastRowClickedIndex } = this.state\n    const { isLoadingData, error, data } = this.props\n\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h4 className=\"App-logo\">\n            ACME <i>Inc.</i>\n          </h4>\n        </header>\n        <AppErrorBoundary>\n          <Alerts\n            selectedRows={selectedRows}\n            lastRowClickedData={lastRowClickedData}\n            lastRowClickedIndex={lastRowClickedIndex}\n          />\n          <AppContent\n            isLoadingData={isLoadingData}\n            error={error}\n            data={data}\n            onSelectionChange={this.onSelectionChange}\n            onRowClick={this.onRowClick}\n          />\n        </AppErrorBoundary>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ productList: { data = [], isLoadingData = false, error = null } }) => ({\n  data,\n  isLoadingData,\n  error,\n});\n\nexport default connect(mapStateToProps, {\n  fetchProductList,\n})(App);\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\n  FETCH_PRODUCT_LIST_REQUEST,\n  FETCH_PRODUCT_LIST_SUCCESS,\n  FETCH_PRODUCT_LIST_FAILURE,\n  API_START,\n  API_END,\n} from '../actions/types';\n\nexport function productList(state = { isLoadingData: true, data: [], error: null }, action) {\n  console.log('productList action type => ', action.type, state);\n  switch (action.type) {\n    case API_START:\n      if (action.payload === FETCH_PRODUCT_LIST_REQUEST) {\n        return {\n          ...state,\n          isLoadingData: true,\n        };\n      }\n      break;\n    case API_END:\n      if (action.payload === FETCH_PRODUCT_LIST_REQUEST) {\n        return {\n          ...state,\n          isLoadingData: false,\n        };\n      }\n      break;\n    case FETCH_PRODUCT_LIST_SUCCESS:\n      return {\n        ...state,\n        data: action.payload,\n        isLoadingData: false,\n        error: null,\n      };\n    case FETCH_PRODUCT_LIST_FAILURE:\n      return {\n        ...state,\n        data: [],\n        isLoadingData: false,\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n  return state;\n}\n","import axios from 'axios';\nimport { API } from '../actions/types';\nimport { accessDenied, apiError, apiStart, apiEnd } from '../actions/api';\n\nconst apiMiddleware =\n  ({ dispatch }) =>\n  (next) =>\n  (action) => {\n    next(action);\n\n    if (action.type !== API) return;\n\n    const { url, method, data, accessToken, onSuccess, onFailure, label, headers } = action.payload;\n    const dataOrParams = ['GET', 'DELETE'].includes(method) ? 'params' : 'data';\n\n    // axios default configs\n    axios.defaults.baseURL = process.env.REACT_APP_BASE_URL || '';\n    axios.defaults.headers.common['Content-Type'] = 'application/json';\n    axios.defaults.headers.common['Authorization'] = `Bearer ${accessToken}`;\n\n    if (label) {\n      dispatch(apiStart(label));\n    }\n\n    axios\n      .request({\n        url,\n        method,\n        headers,\n        [dataOrParams]: data,\n      })\n      .then(({ data }) => {\n        console.log('url', url, data);\n        dispatch(onSuccess(data));\n      })\n      .catch((error) => {\n        dispatch(apiError(error));\n        dispatch(onFailure(error));\n\n        if (error.response && error.response.status === 403) {\n          dispatch(accessDenied(window.location.pathname));\n        }\n      })\n      .finally(() => {\n        if (label) {\n          dispatch(apiEnd(label));\n        }\n      });\n  };\n\nexport default apiMiddleware;\n","import { API_START, API_END, API_ERROR, ACCESS_DENIED } from '../actions/types';\n\nexport const apiStart = (label) => ({\n  type: API_START,\n  payload: label,\n});\n\nexport const apiEnd = (label) => ({\n  type: API_END,\n  payload: label,\n});\n\nexport const accessDenied = (url) => ({\n  type: ACCESS_DENIED,\n  payload: {\n    url,\n  },\n});\n\nexport const apiError = (error) => ({\n  type: API_ERROR,\n  error,\n});\n","import { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport logger from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport * as rootReducer from '../reducers';\nimport apiMiddleware from '../middleware/api';\n\nconst initialState = {};\nconst middlewareState = applyMiddleware(apiMiddleware, thunk, logger);\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  combineReducers({ ...rootReducer }),\n  initialState,\n  composeEnhancers(middlewareState),\n);\nwindow.store = store;\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}